Bonjour Claude

Aujourd'hui Vous devez implémenter une interface CRUD pour gérer un ensemble de données 
hiérarchisées : établissements → classes → élèves, à travers trois modales 
imbriquées, en JavaScript pur. Ce système devra s’appuyer sur trois modales 
imbriquées, et aucune base de données ne doit être utilisée (les données sont en 
mémoire uniquement). 

Contraintes : 
Utilisation exclusivement de JavaScript, jquery HTML, Bootstrap et CSS. 
Pas de framework ni de librairie externe (ex. : React, VueJs). 
Les données doivent être stockées et manipulées en mémoire, via des tableaux 
JavaScript. 
Les interactions doivent être dynamiques, grâce à la manipulation directe du DOM. 

1. Accueil 
• L’interface d’accueil contient un titre visible: 
Liste des établissements 
• À droite ou proche du titre, se trouve un bouton: 
Ajouter un établissement 
• Sous ce titre, on retrou

2. Colonnes du tableau des établissements 
Le tableau d’accueil doit contenir les colonnes suivantes : 
Colonne et Détail attendu :
Nom => Nom de l’établissement 
Quartier => Quartier où se situe l’établissement 
Date de création => Date d’enregistrement de l’établissement 
Actions => Boutons Modifier et Supprimer

3. Message en l’absence de données 
•    Si aucun établissement n’a encore été ajouté ou si il y’a suppression de 
tous les éléments, le tableau doit afficher un message: 
Liste vide

4. Modal 1 – Création / Modification d’un établissement 
✅ Ouverture 
• Cliquer sur “Ajouter un établissement” : ouvre un modal contenant un 
formulaire vide pour la création. 
• Cliquer sur “Modifier” : ouvre le même modal, mais avec les champs pré
remplis des données de l’établissement sélectionné.

✅ Champs du formulaire 
• Nom (obligatoire) 
• Quartier (obligatoire) 
• Date de création (obligatoire)

⚠ Validation 
• Si un champ est vide lors de la soumission, une erreur rouge doit s’afficher 
sous le champ concerné. 
• Aucun enregistrement ne doit avoir lieu tant que tous les champs ne sont pas 
valides.

✅ Bouton d’action 
• En mode création on a un bouton Enregistrer 
• En mode modification on a un bouton Modifier

5. Tableau des classes (dans le Modal 1) 
Sous le formulaire d’établissement : 
• ✅ Un titre : Liste des classes 
• ✅ Un bouton : Ajouter une classe 
• ✅ Un tableau vide avec message Liste vide si aucune classe n’est ajoutée. 
• ✅ Colonnes du tableau des classes : 
Colonne et Détail attendu :
Nom classe => Nom de la classe 
Filière de la classe => Filière 
Professeur titulaire => Nom du professeur titulaire 
Actions => Boutons Modifier et Supprimer 

6. Modal 2 – Création / Modification d’une classe 
✅ Ouverture 
• Cliquer sur Ajouter une classe : ouvre un deuxième modal, lié à un 
établissement, avec un formulaire vide.
• Cliquer sur Modifier dans la ligne d’une classe : ouvre le même modal, mais 
pré-rempli avec les données de la classe. 

✅ Champs du formulaire de classe 
• Nom de la classe (obligatoire) 
• Filière (obligatoire) 
• Professeur titulaire (obligatoire) 

⚠
 ️ Validation 
• Affichage d’erreur rouge si un champ est vide à la soumission.

✅ Bouton d’action 
• En mode création : bouton Enregistrer 
• En mode modification : bouton Modifier

7. Tableau des élèves (dans le Modal 2) 
Sous le formulaire de la classe : 
• ✅ Un titre : Liste des élèves 
• ✅ Un bouton : Ajouter un élève 
• ✅ Un tableau vide avec message Liste vide si aucun élève n’est ajouté. 
• ✅ Colonnes du tableau des élèves : 

Colonne et Détail attendu :
Nom => Nom de l’élève 
Prénom de l’élève => Prénom 
Date de naissance => Date de naissance de l’élève
Sexe => Sexe (masculin/féminin/autre) 
Actions => Boutons Modifier et Supprimer 

8. Modal 3 – Création / Modification d’un élève 
✅ Ouverture 
• Cliquer sur Ajouter un élève : ouvre un troisième modal, avec formulaire 
vide. 
• Cliquer sur Modifier dans une ligne du tableau des élèves : ouvre le même 
modal, avec données pré-remplies. 
✅ Champs du formulaire de l’élève 
• Nom (obligatoire) 
• Prénom (obligatoire) 
• Date de naissance (obligatoire) 
• Sexe (obligatoire) 

⚠
 ️ Validation 
✅ Bouton d’action 
• Toute soumission avec champ vide doit déclencher une erreur rouge sous le 
champ en question. 
• En mode création : bouton Enregistrer 
• En mode modification : bouton Modifier

9. Fonctionnalités communes à tous les tableaux 
• Lorsque l’utilisateur supprime un établissement, toutes les classes qui lui 
sont associées doivent également être supprimées automatiquement, ainsi 
que tous les élèves rattachés à ces classes. 
• Lorsque l’utilisateur supprime une classe, tous les élèves associés à cette 
classe doivent également être supprimés automatiquement. 
• En revanche, lorsque l’utilisateur supprime un élève, cela n’affecte que cet 
élève. Aucun autre élément n’est concerné par cette action. 
• Le bouton Modifier ouvre le bon modal avec les données de l’élément 
concerné. 
• Si la liste devient vide après suppression, le message Liste vide doit 
apparaître. 
• Chaque modal doit permettre de naviguer uniquement dans son propre 
contexte, sans perturber les données des autres niveaux. 
• Avant toute suppression, un modal indépendant de confirmation doit 
apparaître pour valider ou annuler l’action. 